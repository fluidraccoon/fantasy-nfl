name: Run Python Code

# on:
#   schedule:
#     - cron: '5 18 * * 5' # At 00:00 on Monday

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # checkout the repository content

      # Install system dependencies required by R packages
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4' # install the python version needed
      
      - name: Install Python dependencies
        run: |
          python -m venv nfl-env
          source nfl-env/bin/activate
          pip install -r requirements.txt

      # Set up R environment
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Create a writable R library and configure .libPaths to use it
      - name: Create personal R library
        run: |
          mkdir -p ~/R/libs
          echo 'R_LIBS_USER="~/R/libs"' >> ~/.Renviron

      - name: Install Dependencies
        run: |
          R -e "install.packages('ffscrapr', repos='https://cloud.r-project.org')"

      - name: Run Python Script
        run: |
          source nfl-env/bin/activate
          python run_data_creation.py

      # - name: commit files
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add -A
      #     git diff-index --quiet HEAD || (git commit -a -m "updated logs" --allow-empty)

      # - name: push changes
      #   uses: ad-m/github-push-action@v0.6.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: main 

      # Commit and push changes to the repository test
      - name: Commit and Push changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          
          # Stage all changes (replace with specific files if needed)
          git add .
          
          # Commit the changes
          git commit -m "Auto-commit: Updated files after running data creation"
          
          # Push changes using GITHUB_TOKEN
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub provides this automatically