name: Run Python Code

# on:
#   schedule:
#     - cron: '5 18 * * 5' # At 00:00 on Monday

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # checkout the repository content

      # Install system dependencies required by R packages
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # Install R
      - name: Install R
        run: sudo apt-get update && sudo apt-get install -y r-base

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4' # install the python version needed
      
      - name: Install Python dependencies
        run: |
          pip install -r requirements-actions.txt

      # - name: Install Python dependencies
      #   run: |
      #     python -m venv nfl-env
      #     source nfl-env/bin/activate
      #     pip install -r requirements-actions.txt

      # Verify R installation and find library path
      - name: Verify R library
        run: |
          echo "Checking R installation..."
          which R
          R --version
          echo "Looking for libR.so..."
          find /usr -name "libR.so" 2>/dev/null || echo "libR.so not found in /usr"
          ls -la /usr/lib/R/lib/ || echo "/usr/lib/R/lib/ not found"

      # Set R_HOME environment variable for Linux (use actual install location)
      - name: Set R_HOME
        run: |
          echo "R_HOME=/usr/lib/R" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/lib/R/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      # Set up R environment (remove specific version since we're using apt-get R)
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Create a writable R library and configure .libPaths to use it
      - name: Create personal R library
        run: |
          mkdir -p ~/R/libs
          echo 'R_LIBS_USER="~/R/libs"' >> ~/.Renviron

      # Clean R library cache to avoid version conflicts
      - name: Clean R library cache
        run: rm -rf ~/R/libs/*

      # Reinstall rlang and dependencies to match current R version
      - name: Reinstall rlang and dependencies
        run: |
          Rscript -e 'install.packages("rlang", repos="https://cloud.r-project.org")'
          Rscript -e 'install.packages("ffscrapr", repos="https://cloud.r-project.org")'

      - name: Install Dependencies
        run: |
          R -e "install.packages('ffscrapr', repos='https://cloud.r-project.org')"

      - name: Run Python Script
        run: |
          python run_data_creation.py

      # - name: Run Python Script
      #   run: |
      #     source nfl-env/bin/activate
      #     python run_data_creation.py

      # Commit and push changes to the repository
      - name: Commit and Push changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          
          # Stage all changes (replace with specific files if needed)
          git add .
          
          # Commit the changes
          git commit -m "Auto-commit: Updated files after running data creation"
          
          # Push changes using GITHUB_TOKEN
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub provides this automatically